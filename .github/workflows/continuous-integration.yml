name: continuous-integration

on: [push]
jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
      
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build --if-present
      - run: npm run test

  deploy:
    # needs: [build]
    # runs-on: ubuntu-latest

    # steps:
    #   - name: Checkout source code
    #     uses: actions/checkout@v2

    #   - name: Generate deployment package
    #     # run: zip -r deploy.zip . -x '*.git*'
    #     run: zip -r deploy.zip * -x "**node_modules**"

    #   - name: Beanstalk Deploy for app
    #     uses: einaregilsson/beanstalk-deploy@v10
    #     with:
    #       aws_access_key: ${{secrets.AWS_ACCESS_KEY_ID}}
    #       aws_secret_key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
    #       application_name: "test-cd-new"
    #       environment_name: "test-cd-new"
    #       region: "ap-southeast-1"
    #       version_label: "react-demo-new-${{ steps.format-time.outputs.replaced }}"
    #       # deployment_package: deploy.zip
    #   - name: Deployed!
    #     run: echo App deployed to ELB
    needs: [build]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      
      - name: Set up node env
        uses: actions/setup-node@v2.1.2
        with: 
          node-version: ${{ matrix.node-version }}

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: ~./npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm install
      - run: npm run build --if-present
      
      - name: Generate deployment package
        run: zip -r deploy.zip * .[^.]* -x "**node_modules**"
      
      - name: Get timestamp
        uses: gerred/actions/current-time@master
        id: current-time
      
      - name: Beanstalk Deploy for app
        uses: einaregilsson/beanstalk-deploy@v16
        with:
          aws_access_key: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws_secret_key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          application_name: "rest-api"
          environment_name: "rest-api"
          region: "ap-southeast-1"
          version_label: "version-label-${{ steps.format-time.outputs.replaced }}"
          deployment_package: deploy.zip
          use_existing_version_if_available: true

      - name: Deployed!
        run: echo App deployed to ELB
